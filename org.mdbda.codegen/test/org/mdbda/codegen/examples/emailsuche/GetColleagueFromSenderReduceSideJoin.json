{
	"mapFunction":[{
		"testInput":[
"\"Road.Runner@acme.com\";\"Wile.E.Coyote@acme.com\"",
"\"Road.Runner@acme.com\";\"Foghorn.Leghorn@acme.com\"",
"\"Road.Runner@acme.com\";\"Elmer.Fudd@acme.com\"",
"\"Foghorn.Leghorn@acme.com\";\"Road.Runner@acme.com\"",
"\"Wile.E.Coyote@acme.com\";\"Road.Runner@acme.com\"" ],

		"testOutput":[
"\"Road.Runner@acme.com\";\"0:Wile.E.Coyote@acme.com\"",
"\"Road.Runner@acme.com\";\"0:Foghorn.Leghorn@acme.com\"",
"\"Road.Runner@acme.com\";\"0:Elmer.Fudd@acme.com\"",
"\"Wile.E.Coyote@acme.com\";\"0:Road.Runner@acme.com\"",
"\"Foghorn.Leghorn@acme.com\";\"0:Road.Runner@acme.com\""
 ],
		"KEYIN":"Text",
		"VALUEIN":"Text",
		"KEYOUT":"Text",
		"VALUEOUT":"Text", 
		"function":"
	context.write(key, new Text(\"0:\" + value));
		",
		"stormExecute":"
	collector.emit(new Values(input.getString(0), \"0:\" + input.getString(1)));
		"
	},{
		"testInput":[
"\"Road.Runner@acme.com:mh@hahnpro.com:ts1\";null",
"\"Foghorn.Leghorn@acme.com:mh@hahnpro.com:ts2\";null",
"\"Elmer.Fudd@acme.com:info@hahnpro.com:ts3\";null",
"\"Wile.E.Coyote@acme.com:mh@hahnpro.com:ts42\";null"
],

		"testOutput":[ 
"\"Road.Runner@acme.com\";\"1:mh@hahnpro.com:ts1\"",
"\"Foghorn.Leghorn@acme.com\";\"1:mh@hahnpro.com:ts2\"",
"\"Elmer.Fudd@acme.com\";\"1:info@hahnpro.com:ts3\"",
"\"Wile.E.Coyote@acme.com\";\"1:mh@hahnpro.com:ts42\""
],
		"KEYIN":"Text",
		"VALUEIN":"NullWritable",
		"KEYOUT":"Text",
		"VALUEOUT":"Text", 
		"function":"
	String[] splitKey = key.toString().split(\":\");
	context.write(new Text(splitKey[0]), new Text(\"1:\" + splitKey[1] + \":\" + splitKey[2]));
		",
		"stormExecute":"
	String[] splitKey = input.getString(0).split(\":\");
	collector.emit(new Values(splitKey[0], \"1:\" + splitKey[1] + \":\" + splitKey[2]));
		"
	}],
	"reduceFunction":{
		"testInput":[
"\"Road.Runner@acme.com\";[
	\"0:Wile.E.Coyote@acme.com\",
	\"0:Foghorn.Leghorn@acme.com\",
	\"0:Elmer.Fudd@acme.com\",
	\"1:mh@hahnpro.com:ts1\" ] ",
"\"Wile.E.Coyote@acme.com\";[
	\"0:Road.Runner@acme.com\",
	\"1:mh@hahnpro.com:ts42\" ]",
"\"Foghorn.Leghorn@acme.com\";[
	\"0:Road.Runner@acme.com\",
	\"1:mh@hahnpro.com:ts2\" ]"
"\"Elmer.Fudd@acme.com\";[
	\"1:info@hahnpro.com:ts3\"]"
],
		"testOutput":[
"\"Road.Runner@acme.com\";\"Wile.E.Coyote@acme.com:mh@hahnpro.com:ts1\"",
"\"Road.Runner@acme.com\";\"Foghorn.Leghorn@acme.com:mh@hahnpro.com:ts1\"",
"\"Road.Runner@acme.com\";\"Elmer.Fudd@acme.com:mh@hahnpro.com:ts1\"",
"\"Wile.E.Coyote@acme.com\";\"Road.Runner@acme.com:mh@hahnpro.com:ts42\"",
"\"Foghorn.Leghorn@acme.com\";\"Road.Runner@acme.com:mh@hahnpro.com:ts2\""
 ],
		"KEYIN":"Text",
		"VALUEIN":"Text",
		"KEYOUT":"Text",
		"VALUEOUT":"Text", 
		"function":"
	input0.clear();
	input1.clear();
			
	while(values.iterator().hasNext()){
		Text val = values.iterator().next();
		switch (val.charAt(0)) {
		case '0':
			input0.add(val.toString().substring(2));
			break;
		case '1':
			input1.add(val.toString().substring(2));
			break;
		default:
			break;
		}
	}
			
	for(String el0 : input0){
		for(String el1 : input1){
			context.write(key, new Text(el0 + \":\" + el1));
		}
	}
		",
		"stormExecute":"
		
	
	java.util.HashMap<String, java.util.ArrayList<String>> inputMap0 = new HashMap<>();
	java.util.HashMap<String, java.util.ArrayList<String>> inputMap1 = new HashMap<>();
	
	while(!collectedTupels.isEmpty()){ 
		Tuple tuple = collectedTupels.poll();
		switch (tuple.getString(1).charAt(0)) {
		case '0':
			if(!inputMap0.containsKey(tuple.getString(0))){
				inputMap0.put(tuple.getString(0),new java.util.ArrayList<String>());
			}
			inputMap0.get(tuple.getString(0)).add(tuple.getString(1).substring(2));
			break;
		case '1':
			if(!inputMap1.containsKey(tuple.getString(0))){
				inputMap1.put(tuple.getString(0),new java.util.ArrayList<String>());
			}
			inputMap1.get(tuple.getString(0)).add(tuple.getString(1).substring(2));
			break;
		default:
			break;
		}
	}
	
	for(String key : inputMap0.keySet()){
		for(String el0 : inputMap0.get(key)){
			if(inputMap1.containsKey(key))
			for(String el1 : inputMap1.get(key)){
				collector.emit(new Values(key, el0 + \":\" + el1));
			}
		}
	}
	
		",
		"fields":"
	java.util.ArrayList<String> input0 = new java.util.ArrayList<>();
	java.util.ArrayList<String> input1= new java.util.ArrayList<>();
		"
	},
	
	"jobConfig":"
		//default conf
	"
}