@GenModel(editDirectory="/org.mdbda.xcore/src-edit", editorDirectory="/org.mdbda.xcore/src-editor", fileExtensions="mdbdamodel")
package org.mdbda.model

/*TODO 
 * http://www.vogella.com/articles/EclipseEMF/article.html#inheritance
 * http://help.eclipse.org/indigo/index.jsp?topic=/org.eclipse.emf.doc/tutorials/slibmod/slibmod.html
 */
import java.util.HashSet

class MDBDAModelRoot{
	contains Workflow rootWorkflow opposite modelRoot
	
	contains Resource[] resources
	contains DataType[] dataTypes
	
	
	
	String configurationString

	String author
	String version
	String name
	
	op boolean equals(Object other) {
		if (other instanceof MDBDAModelRoot) {
			if( ((this.name == null && other.name == null) || 
					(this.name != null && this.name.equals(other.name))) &&
				((this.author == null && other.author == null) ||
					(this.author != null && this.author.equals(other.author))) &&
				((this.version == null && other.version == null) ||
					(this.version != null && this.version.equals(other.version))) &&
				((this.configurationString == null && other.configurationString == null) ||
					(this.configurationString != null && this.configurationString.equals(other.configurationString)))
				){
				return true;
			}
		}			
		return false;
	}
}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

class Workflow extends Task{
	contains Task[] tasks opposite workflow 
	container MDBDAModelRoot modelRoot opposite rootWorkflow
	 
	contains Resource[] internalDataResources
	
	refers Task startTask
	op Resource[] getInputDataResources()
	{
		//input data resources are dataResources with no inputResources
		var HashSet<Resource> inputDataResources = new HashSet<Resource>()
		for( Resource res : internalDataResources){
			if( res.inputResources.empty ){
				inputDataResources.add(res)
			}
		}
		
		return inputDataResources.toEList
	}
	
	op Resource[] getOutputDataResources(){
		//output data resources are dataResources with no outputResources
		var HashSet<Resource> outputDataResources = new HashSet<Resource>()
		for( Resource res : internalDataResources){
			if( res.outputResources.empty ){
				outputDataResources.add(res)
			}
		}
		
		return outputDataResources.toEList
	}
	
	op boolean equals(Object other) {
		if (other instanceof Workflow) {
			if(super.equals(other) &&
				((this.tasks == null && other.tasks == null) || 
					(this.tasks != null && this.tasks.equals(other.tasks)))&&
				((this.startTask == null && other.startTask == null) || 
					(this.startTask != null && this.startTask.equals(other.startTask)))
			){
				return true;
			}
		}
		return false
	}
}

class RemoteWorkflow extends Resource{
	String remoteDiagramURI
}
 
class Task extends Resource{
	container Workflow workflow opposite tasks
	refers Task[] dependsOn
	int maxInputCount
	int maxOutputCount
	
	String dataTransformationDiagramURI
		
	contains DataObject[] dataObjects opposite containerTask
	
	String inputMapping
	String outputMapping
	
	
	op boolean equals(Object other) {
		if (other instanceof Task) {
			if(super.equals(other) &&
				(this.maxInputCount == other.maxInputCount) &&
				(this.maxOutputCount == other.maxOutputCount)
			){
				return true;
			}
		}
		return false		
	}
} 

class DataType{
	String typeName
	String packageName
	op boolean equals(Object other) {
		if (other instanceof DataType) {
			if(super.equals(other) &&
				(this.typeName == other.typeName) &&
				(this.packageName == other.packageName)
			){
				return true;
			}
		}
		return false
	}
}

class DataObject{
	contains DataAttribute[] attributes opposite dataObject
	container Task containerTask opposite dataObjects
	String name
	refers DataType dataType
}

class DataReference extends DataObject{
	refers DataObject source
	refers DataObject target
		
}

class DataAttribute{
	container DataObject dataObject opposite attributes
	String name
	String value
	DataCondition condition
}

enum DataCondition{
	Exist as "\u2203"
	LessThan as "<"
	LessOrEquals as "<="
	GeaterThan as ">"
	GeaterOrEquals as ">="
	Equals as "=="
	NotEquals as "!="
	RegEx as "regEx"
}

class Resource{	
	refers Resource[] inputResources
	refers Resource[] outputResources
 @GenModel(propertyMultiLine="true")
	String configurationString
	String typeId
	String name
	
	String dataDSLDesciptionURI
	
	op boolean equals(Object other) {
		if (other instanceof Resource) {
			if( ((this.name == null && other.name == null) || 
					(this.name != null && this.name.equals(other.name))) &&
				((this.typeId == null && other.typeId == null) ||
					(this.typeId != null && this.typeId.equals(other.typeId))) &&
				((this.configurationString == null && other.configurationString == null) ||
					(this.configurationString != null && this.configurationString.equals(other.configurationString)))
			){
				return true;
			}			
 		}
		return false
	}
}

